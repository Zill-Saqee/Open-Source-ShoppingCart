{"version":3,"sources":["webpack:///./src/components/cart.js","webpack:///./src/components/productList.js","webpack:///./src/pages/index.js","webpack:///./src/pages/cartPage.js"],"names":["Cart","useShoppingCart","totalPrice","cartCount","clearCart","onClick","navigate","ProductList","product","console","log","addItem","name","price","src","image","loadStripe","Home","products","data","useStaticQuery","prices","edges","forEach","item","index","push","node","description","sku","id","unit_amount","currency","images","map","key","CartPage","cartDetails","incrementItem","decrementItem","redirectToCheckout","Object","keys","quantity"],"mappings":"+NAIe,SAASA,IAAQ,IAAD,EAEkBC,cAAtCC,EAFoB,EAEpBA,WAAaC,EAFO,EAEPA,UAAYC,EAFL,EAEKA,UAClC,OAEE,6BACE,qCAAWF,EAAW,KACpB,0CAAgBC,GAChB,4BAAQE,QAAS,kBAAKD,MAAtB,SACA,4BAAQC,QAAS,kBAAKC,YAAS,eAA/B,kBCVO,SAASC,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QAEpCC,QAAQC,IAAI,sBAAuBF,GAFY,MAIfP,cAAxBU,EAJuC,EAIvCA,QAJuC,EAI7BT,WAClB,OACE,oCACE,6BAEI,oCACE,8BAAOM,EAAQI,MAAY,6BAC3B,8BAAOJ,EAAQK,MAAM,KAAW,6BAChC,kCAAO,yBAAKC,IAAKN,EAAQO,SACzB,4BAAQV,QAAS,WACfM,EAAQH,KADV,iBAON,8BCfgBQ,YAAW,+GAElB,SAASC,IAEtB,IAAMC,EAAW,GACXC,EAASC,YAAc,cAqF7B,OAvDoBD,EAAKE,OAAOC,MAAQH,EAAKE,OAAOC,MAAQ,MAChDC,SAAQ,SAAUC,EAAMC,GAClCP,EAASQ,KAAK,CAEZd,KAAMY,EAAKG,KAAKnB,QAAQI,KAExBgB,YAAaJ,EAAKG,KAAKnB,QAAQoB,YAE/BC,IAAKL,EAAKG,KAAKnB,QAAQsB,GAEvBjB,MAAOW,EAAKG,KAAKI,YACjBC,SAAUR,EAAKG,KAAKK,SAEpBjB,MAAOS,EAAKG,KAAKnB,QAAQyB,OAAO,QAMpCxB,QAAQC,IAAI,eAAgBQ,GAqC1B,6BACE,kBAAClB,EAAD,MAEIkB,EAASgB,KAAI,SAAC1B,GAAD,OACX,kBAACD,EAAD,CAAa4B,IAAK3B,EAAQqB,IAAKrB,QAASA,U,yDCvGpD,oFAGe,SAAS4B,IACpB3B,QAAQC,IAAI,aADmB,MAE2CT,cAAlEoC,EAFuB,EAEvBA,YAAaC,EAFU,EAEVA,cAAeC,EAFL,EAEKA,cAAeC,EAFpB,EAEoBA,mBACnD,OAGI,6BACI,4BAAQnC,QAAS,kBAAMmC,MAAvB,kBACA,6BACCC,OAAOC,KAAKL,GAAaH,KAAI,SAACV,GAAD,OAC1B,6BACI,sCAAYa,EAAYb,GAAMZ,MAC9B,sCAAYyB,EAAYb,GAAMX,OAC9B,sCAAYwB,EAAYb,GAAMmB,UAC9B,4BAAQtC,QAAS,WACbiC,EAAcD,EAAYb,GAAMK,OADpC,KAGA,4BAAQxB,QAAS,WACbkC,EAAcF,EAAYb,GAAMK,OADpC","file":"component---src-pages-index-js-627842d0a68897a9ae81.js","sourcesContent":["import { navigate } from \"gatsby\";\r\nimport React from \"react\"\r\nimport { useShoppingCart } from \"use-shopping-cart\"\r\nimport CartPage from '../pages/cartPage'\r\nexport default function Cart() {\r\n\r\n    const {totalPrice , cartCount , clearCart} = useShoppingCart();\r\n  return  (\r\n\r\n    <div>\r\n      <p>Total: {totalPrice/100}</p>\r\n        <span> Count : {cartCount}</span>\r\n        <button onClick={()=> clearCart()} >Clear</button>\r\n        <button onClick={()=> navigate('/CartPage')}>Go To Checout</button>\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { useShoppingCart } from \"use-shopping-cart\"\r\n\r\nexport default function ProductList({ product }) {\r\n\r\n  console.log(\"Data from Stripe : \", product)\r\n\r\n  const { addItem , totalPrice} = useShoppingCart();\r\n  return (\r\n    <>\r\n      <div>\r\n       \r\n          <>\r\n            <span>{product.name}</span><br />\r\n            <span>{product.price/100}</span><br />\r\n            <span> <img src={product.image} /></span>\r\n            <button onClick={() => {\r\n              addItem(product)\r\n            }}\r\n\r\n            >Add To Cart</button>\r\n          </>\r\n      </div>\r\n      <hr />\r\n    </>\r\n\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport {graphql , useStaticQuery} from 'gatsby'\r\nimport {loadStripe} from '@stripe/stripe-js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Cart from '../components/cart'\r\nimport ProductList from '../components/productList'\r\n\r\n\r\nconst stripePromise = loadStripe(\"pk_test_51HmAjKL0MJqcaXNQYxNgmeMfWMXh6s0bjUjQbMiB8BvXbKdNIrj7IWyiEATKhU6wxChktEuEFZ6NYiiTJDKPcRrN00cdzDpm7v\")\r\n\r\nexport default function Home() {\r\n\r\n  const products = [] ;\r\n  const data  =  useStaticQuery (\r\n    graphql` \r\n       query ProductPrices {\r\n          prices : allStripePrice {\r\n              edges {\r\n                node {\r\n                  id\r\n                  active\r\n                  currency\r\n                  unit_amount\r\n                  product {\r\n                    id\r\n                    name\r\n                    images\r\n                    description\r\n                  }\r\n                }\r\n\r\n\r\n              }\r\n\r\n\r\n\r\n          }\r\n\r\n       }\r\n    \r\n    `\r\n  )\r\n\r\n  const productData = data.prices.edges ? data.prices.edges : null;\r\n  productData.forEach(function (item, index) {\r\n    products.push({\r\n\r\n      name: item.node.product.name ,\r\n      // Optional description to be shown on the Stripe Checkout page\r\n      description: item.node.product.description,\r\n      // A unique identifier for this item (stock keeping unit)\r\n      sku: item.node.product.id,\r\n      // price in smallest currency unit (e.g. cent for USD)\r\n      price: item.node.unit_amount,\r\n      currency: item.node.currency,\r\n      // Optional image to be shown on the Stripe Checkout page\r\n      image: item.node.product.images[0]\r\n\r\n    })\r\n   \r\n  });\r\n\r\n  console.log(\"Array check \" ,products);\r\n  /*\r\n   const products = [\r\n    {\r\n      // Line item name to be shown on the Stripe Checkout page\r\n      name: product.product.name ,\r\n      // Optional description to be shown on the Stripe Checkout page\r\n      description: product.product.description,\r\n      // A unique identifier for this item (stock keeping unit)\r\n      sku: product.id,\r\n      // price in smallest currency unit (e.g. cent for USD)\r\n      price: product.unit_amount,\r\n      currency: 'USD',\r\n      // Optional image to be shown on the Stripe Checkout page\r\n      image: product.product.images[0]\r\n    }\r\n     ... more products \r\n  ]\r\n  /*\r\n  const productData = [\r\n    {\r\n      name: 'Bananas',\r\n      sku: 'sku_GBJ2Ep8246qeeT',\r\n      price: 400,\r\n      image: 'https://www.fillmurray.com/300/300',\r\n      currency: 'USD'\r\n    },\r\n    {\r\n      name: 'Tangerines',\r\n      sku: 'sku_GBJ2WWfMaGNC2Z',\r\n      price: 100,\r\n      image: 'https://www.fillmurray.com/300/300',\r\n      currency: 'USD'\r\n    }\r\n  ]\r\n */\r\n  return (\r\n    <div>\r\n      <Cart />\r\n      {\r\n          products.map((product)=>(\r\n            <ProductList key={product.sku} product={product} />\r\n          ))\r\n        }\r\n        \r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { useShoppingCart } from \"use-shopping-cart\"\r\n\r\nexport default function CartPage() {\r\n    console.log(\"Cart Page\")\r\n    const { cartDetails, incrementItem, decrementItem, redirectToCheckout } = useShoppingCart();\r\n    return (\r\n\r\n\r\n        <div>\r\n            <button onClick={() => redirectToCheckout()}>Go To Checkout</button>\r\n            <hr />\r\n            {Object.keys(cartDetails).map((item) => (\r\n                <div>\r\n                    <p> Name : {cartDetails[item].name}</p>\r\n                    <p> Name : {cartDetails[item].price}</p>\r\n                    <p> Name : {cartDetails[item].quantity}</p>\r\n                    <button onClick={() => {\r\n                        incrementItem(cartDetails[item].sku)\r\n                    }}>+</button>\r\n                    <button onClick={() => {\r\n                        decrementItem(cartDetails[item].sku)\r\n                    }}>-</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n\r\n    )\r\n}\r\n"],"sourceRoot":""}